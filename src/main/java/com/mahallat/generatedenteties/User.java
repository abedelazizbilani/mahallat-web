package com.mahallat.generatedenteties;
// Generated Aug 13, 2018 2:54:44 AM by Hibernate Tools 5.1.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "mahallat")
public class User implements java.io.Serializable {

	private Integer id;
	private String username;
	private String email;
	private String active;
	private String name;
	private String lastname;
	private String roleId;
	private String createdAt;
	private String updatedAt;
	private Set<ProductRating> productRatings = new HashSet<ProductRating>(0);
	private Set<StoreLike> storeLikes = new HashSet<StoreLike>(0);
	private Set<Role> roles = new HashSet<Role>(0);
	private Set<ProductLike> productLikes = new HashSet<ProductLike>(0);
	private Set<Store> stores = new HashSet<Store>(0);

	public User() {
	}

	public User(String username, String email, String active, String name, String lastname, String roleId,
			String createdAt, String updatedAt, Set<ProductRating> productRatings, Set<StoreLike> storeLikes,
			Set<Role> roles, Set<ProductLike> productLikes, Set<Store> stores) {
		this.username = username;
		this.email = email;
		this.active = active;
		this.name = name;
		this.lastname = lastname;
		this.roleId = roleId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.productRatings = productRatings;
		this.storeLikes = storeLikes;
		this.roles = roles;
		this.productLikes = productLikes;
		this.stores = stores;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "username", length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "active", length = 45)
	public String getActive() {
		return this.active;
	}

	public void setActive(String active) {
		this.active = active;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "lastname", length = 45)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "role_id", length = 45)
	public String getRoleId() {
		return this.roleId;
	}

	public void setRoleId(String roleId) {
		this.roleId = roleId;
	}

	@Column(name = "created_at", length = 45)
	public String getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(String createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "updated_at", length = 45)
	public String getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(String updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<ProductRating> getProductRatings() {
		return this.productRatings;
	}

	public void setProductRatings(Set<ProductRating> productRatings) {
		this.productRatings = productRatings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<StoreLike> getStoreLikes() {
		return this.storeLikes;
	}

	public void setStoreLikes(Set<StoreLike> storeLikes) {
		this.storeLikes = storeLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<ProductLike> getProductLikes() {
		return this.productLikes;
	}

	public void setProductLikes(Set<ProductLike> productLikes) {
		this.productLikes = productLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Store> getStores() {
		return this.stores;
	}

	public void setStores(Set<Store> stores) {
		this.stores = stores;
	}

}
